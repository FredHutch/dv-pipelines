
process {
    withLabel: local_run {
        executor = 'local'
        memory = 16.GB
        cpus = 10
    }
    withLabel: gizmo {
        executor = 'slurm'
        queue = 'campus'
        memory = 12.GB
        cpus = 4
        time = '1d'
        scratch = '/fh/scratch/delete30/warren_h/sravisha/'
    }
    withLabel: gizmo_largenode {
        executor = 'slurm'
        queue = 'largenode'
        memory = 128.GB
        cpus = 10
        time = '3d'
        scratch = '/fh/scratch/delete30/warren_h/sravisha/'
    }
}

params {

  input {
    type = "RDS"
    exp = "s3://vis.fredhutch.singlecell.pipeline/data/exp.rds"
    col = "s3://vis.fredhutch.singlecell.pipeline/data/col.rds"
    row = "s3://vis.fredhutch.singlecell.pipeline/data/row.rds"
  }

  output {
    // folder = "s3://vis.fredhutch.nf.singlecell.data"
    folder = "/Users/zager/Documents/Projects/dv/dv-cambiagrove/Pipeline/nextflow/out"
  }

  monocle3 {

    preprocess {
      method = ['PCA'] 
      num_dim = [5, 30, 199]  
      norm_method = ['log']  
      use_genes = 'NULL'
      residual_model_formula_str = 'NULL'
      pseudo_count = [1.0]
    }
    reduce_dim {
      max_components = [2,3]
      steps = ['PCA-UMAP']
    }
    cluster {
      resolution = "NULL"
      k = [20]
      louvain_iter = [1]
      partition_qval = [0.05]
      weight = ["FALSE"]
    }
    partition {
      reduction_method = ['UMAP']
      knn = [20]
      weight = "NULL"
      louvain_iter = [1]
      resolution = "NULL"
      partition_qval = [0.05]
    }
    learn_graph {
      no_partition = "NULL"
      no_close_loop = "NULL"
      euclidean_distance_ratio = [1]
      geodesic_distance_ratio = [0.333]
      no_prune_graph = "NULL"
      minimal_branch_len = [10]
      orthogonal_proj_tip = "NULL"
    }
    order_cells {
      reduction_method = ["UMAP"]
      root_pr_nodes = "NULL"
      root_cells = "NULL" 
      root_type = ['Germline']
      cell_phenotype = ["cao_cell_type"]  // cao_tissue or other columns by calling pData(cds) in R
    }
    diff_exp {
      neighbor_graph = ["principal_graph", "knn"]
      reduction_method = "UMAP"
      knn = [25]
      method = "Moran_I"
      alternative = ["greater"]     // ["greater", "less", "two.sided"]
      expression_family = "quasipoisson"
    }
  }
  seurat {
    filter { 
      subset_names = ['nGene']
      low_threshold = [1] // Dash Dash Escapes The Negative
      high_threshold = [1000]
      cells_use = ['TRUE']
    }
    normalize {
      assay_type = ['RNA']
      normalization_method = ['LogNormalize']
      scale_factor = [1000]
    }
    variable_genes {
      mean_function = ["ExpMean"]
      dispersion_function = ["LogVMR"]
      fvg_x_low_cutoff = [0.1]
      fvg_y_low_cutoff = [8]
      fvg_x_high_cutoff = [1]
      fvg_y_high_cutoff = ["Inf"]
    }
    scale {
      genes_use = "NULL"
      vars_to_regress =  ["nUMI"]
      use_umi = ["FALSE"]
      model_use = ["linear"]   // ['linear', 'poisson', 'negbinom]
      do_scale = ["TRUE"]
      do_center = ["TRUE"]
      scale_max = [10]
      block_size = [1000]
      min_cells_to_block = [1000]
      assay_type = ["RNA"]
      check_for_norm = ["TRUE"]
    }
    pca {
      pc_genes = "NULL"
      pcs_compute = [20]
      use_imputed = ["FALSE"]
    }
    tsne {
      reduction_use = ["PCA"]   // ["PCA". "ICA"]
      cells_use = "NULL"
      dims_use = ['1,2,3,4,5']
      genes_use = "NULL"
      do_fast = ["TRUE"]
    }
    cluster {
      genes_use = "NULL"
      reduction_type = ["PCA"]
      dims_use = ['1,2,3,4,5']
      k_param = [30]
      prune_snn = [0.0666]
      resolution = [0.8]
      algorithm = [1]
    }
  }
  scanpy {
    pca {
      no_zero_center = "NULL"
      n_comps = [5]
      svd_solver = ["auto"]
      use_all = ["TRUE"]
    }
    normalise{
      scale_factor = [10000]
    }
    find_variable_genes {
      flavor = 'seurat'
      min_mean = 0.0125
      max_mean = 3
      min_disp = 0.5
      max_disp = 'Inf'
      n_bins = 20
      n_top_genes = 'None'
    }
    scale_data {
      do_log = 'true'
      vars_to_regress = 'n_counts'
      zero_centre = 'true'
      scale_max = 'none' 
    }

    neighbours {
      n_neighbours = 15
      n_pcs = 9  
      use_rep = 'none'
      knn = 'false'
      random_seed = 1234
      method = 'umap'
      metric = 'euclidean'
    }
    find_clusters {
      flavor = 'vtraag'
      restrict_to = 'none'
      key_added = 'louvain'
      use_weights = 'false' 
      random_seed = 1234 
      resolutions = [ '0.1', '0.3', '0.5', '0.7', '1.0', '2.0', '3.0', '4.0', '5.0' ]
    }
    run_umap {
      min_dist = 0.5
      spread = 1
      n_components = 2
      maxiter = 'none'
      alpha = 1
      gamma = 1
      negative_sample_rate = 5
      init_pos = 'spectral'
      random_seed = 1234
      a = 'none'
      b = 'none'
      use_raw = 'false'
      color_by = 'none'
      edges = 'false'
      arrows = 'false'
      groups = 'none'
      projection = '2d'
    }
    run_tsne {
      n_components = 2
      use_rep = 'none'
      perplexities = [ 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50 ]
      early_exaggeration = 12
      learning_rate = 1000
      components = '1,2' 
      palette = 'None'
      frame = 'true'
      random_seed = 1234
      projection = '2d'
    }
    find_markers{
      groupby = 'louvain'
      groups = 'none'
      reference = 'rest'
      n_genes = 100
      method = 't-test_overestim_var'
      rankby_abs = 'false'
      use_raw = 'true'
      show_n_genes = 10
      key = 'none'
    }
  }
}